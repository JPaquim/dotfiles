#!/usr/bin/env bash

setup_gitconfig () {
  if ! [ -f $HOME/.gitconfig ]; then
    echo '- Setting up gitconfig...'
    git_credential='cache'
    if [ "$(uname -s)" == "Darwin" ]
    then
      git_credential='osxkeychain'
    fi
    echo ' - What is your github author name?'
    read -e git_authorname
    echo ' - What is your github author email?'
    read -e git_authoremail
    git config --global user.name $git_authorname
    git config --global user.email $git_authoremail
  fi
}

link_file () {
  local src=$1 dst=$2
  local overwrite= backup= skip=
  local action=
  if [ -f "$dst" -o -d "$dst" -o -L "$dst" ]; then
      local currentSrc="$(readlink $dst)"
      if [ "$currentSrc" == "$src" ]; then
        skip=true;
      else
        echo "File already exists: $dst ($(basename "$src")), what do you want to do?\n\
        [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
        read -n 1 action
        case "$action" in
          o )
            overwrite=true;;
          O )
            overwrite_all=true;;
          b )
            backup=true;;
          B )
            backup_all=true;;
          s )
            skip=true;;
          S )
            skip_all=true;;
          * )
            ;;
        esac
    fi
    overwrite=${overwrite:-$overwrite_all}
    backup=${backup:-$backup_all}
    skip=${skip:-$skip_all}
    if [ "$overwrite" == "true" ]; then
      rm -rf "$dst"
      echo "removed $dst"
    fi

    if [ "$backup" == "true" ]; then
      mv "$dst" "${dst}.backup"
      echo "moved $dst to ${dst}.backup"
    fi

    if [ "$skip" == "true" ]; then
      echo "skipped $src"
    fi
  fi

  if [ "$skip" != "true" ]; then  # "false" or empty
    ln -s "$1" "$2"
    echo "linked $1 to $2"
  fi
}

command_exists () {
    type "$1" &> /dev/null
}

setup_gitconfig

# Install software, platform specific
if [ "$(uname -s)" == "Darwin" ]; then # OS X
    cd osx
elif [ "$(expr substr $(uname -s) 1 5)" = "Linux" ]; then
    cd linux
fi
source ./install
cd ..

# Install dotfiles
for dotdir in shell vim misc; do
    cd $dotdir
    source ./install
    cd ..
done
